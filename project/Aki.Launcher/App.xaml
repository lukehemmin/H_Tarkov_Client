<!-- App.xaml
License: NCSA Open Source License

Copyright: Merijn Hendriks
AUTHORS:
waffle.lord
Merijn Hendriks
-->
    
    <Application x:Class="Aki.Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Aki.Launcher"
             xmlns:viewmodel="clr-namespace:Aki.Launcher.ViewModel"
             xmlns:views="clr-namespace:Aki.Launcher.Views"
             xmlns:cc="clr-namespace:Aki.Launcher.Custom_Controls"
             StartupUri="MainWindow.xaml"
             Startup="Application_Startup">
    
    <Application.Resources>
        
        <!-- Colors -->
        <Color x:Key="AKI_DarkGray">#121212</Color>
        <Color x:Key="AKI_Yellow">#FFC107</Color>
        <Color x:Key="AKI_DarkYellow">#997300</Color>
        <Color x:Key="AKI_White">#FFFFFF</Color>
        <Color x:Key="AKI_Gray">#282828</Color>
        <Color x:Key="AKI_Red">#FC5C65</Color>
        <Color x:Key="AKI_Blue">#4B7BEC</Color>
        <Color x:Key="AKI_DarkGrayBlue">#323947</Color>
        <Color x:Key="AKI_Transparaent_DarkGray">#00121212</Color>
        
        <!-- Brushes -->
        <SolidColorBrush x:Key="AKI_Foreground_Dark" Color="{StaticResource AKI_DarkGray}"/>
        <SolidColorBrush x:Key="AKI_Foreground_Light" Color="{StaticResource AKI_White}"/>
        <SolidColorBrush x:Key="AKI_Foreground_Red" Color="{StaticResource AKI_Red}"/>
        <SolidColorBrush x:Key="AKI_Background_Dark" Color="{StaticResource AKI_DarkGray}"/>
        <SolidColorBrush x:Key="AKI_Background_Light" Color="{StaticResource AKI_Gray}"/>
        <SolidColorBrush x:Key="AKI_Background_Yellow" Color="{StaticResource AKI_Yellow}"/>
        <SolidColorBrush x:Key="AKI_Background_Blue" Color="{StaticResource AKI_Blue}"/>
        <SolidColorBrush x:Key="AKI_Background_DarkGrayBlue" Color="{StaticResource AKI_DarkGrayBlue}"/>

        <!-- Path Geometry for re-usable icons -->
        <PathGeometry x:Key="FolderWithPlus" Figures="M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z" FillRule="NonZero"/>

        <PathGeometry x:Key="OpenFolder" Figures="M 2.2731724 14.474999 C 2.5381753 14.186249 3.2824783 12.195001 3.9271792 10.05 5.6676413 4.2592679 4.7621113 4.8000009 12.719033 4.8000009 c 5.6684 0 6.78597
                      0.072438 7.12511 0.4618343 0.332844 0.3821726 0.17704 1.1971998 -0.903259 4.7250006 -0.763041 2.4917722 -1.52781 4.4189802 -1.840552 4.6381652 C 16.708149 14.899859 14.592619 15 9.1783054
                      15 2.1694393 15 1.8160107 14.973129 2.2731724 14.474999 Z M 0.36305228 14.025959 C 0.11166709 13.786409 0 11.721164 0 7.3114288 0 1.9218189 0.0760474 0.8703905 0.49472143 0.47142828 0.8806724
                      0.10364926 1.7051307 0 4.2446088 0 7.4749739 0 7.5058294 0.00685701 8.2944922 0.89999983 L 9.0892098 1.8 h 3.6407872 c 3.221023 0 3.71338 0.069177 4.270431 0.5999996 0.346306 0.3300009 0.629646
                      0.802501 0.629646 1.0500009 0 0.3838238 -0.858607 0.4500002 -5.83853 0.4500002 -5.6986082 0 -5.856156 0.016794 -6.5739181 0.7007613 C 4.8131633 4.9861817 4.2426547 6.0999322 3.9498292 7.0757619
                      2.3566037 12.385128 1.8127023 13.81777 1.2887903 14.084957 c -0.37832867 0.192941 -0.68163535 0.173611 -0.92573802 -0.059 z" FillRule="NonZero"/>

        <!-- Data Templates to load views with view models -->
        <DataTemplate DataType="{x:Type viewmodel:ConnectServerViewModel}">
            <views:ConnectServerView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodel:SettingsViewModel}">
            <views:SettingsView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodel:RegisterViewModel}">
            <views:RegisterView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodel:LoginViewModel}">
            <views:LoginView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodel:ProfileViewModel}">
            <views:ProfileView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodel:EditProfileViewModel}">
            <views:EditProfileView/>
        </DataTemplate>

        <!-- Base Sytles -->

        <!-- Remove Hightlight effect from buttons -->
        <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="NoChromeGrid" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="disable_enter">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.100" BeginTime="0:0:0.100"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="disable_enter"/>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.100"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- App Button Base Style -->
        <Style x:Key="AppButtonStyleBase" TargetType="{x:Type Button}" BasedOn="{StaticResource NoChromeButton}">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="45"/>
            <Setter Property="MinHeight" Value="29"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="10"/>
        </Style>

        <!-- Styles for controls -->

        <!-- Menu Toolbar Button Style -->
        <Style x:Key="MenuToolbarButtonStyle" TargetType="{x:Type cc:MenuBarButton}" BasedOn="{StaticResource NoChromeButton}">
            <Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
            <Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AKI_Background_Yellow}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <RemoveStoryboard BeginStoryboardName="selected_enter"/>
                        <RemoveStoryboard BeginStoryboardName="selected_exit"/>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="0 0 0 2" Duration="0:0:0.200"/>
                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource AKI_DarkYellow}" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="0" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="selected_enter">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource AKI_Yellow}" Duration="0:0:0.200"/>
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="0 0 0 2" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard x:Name="selected_exit">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource AKI_White}" Duration="0:0:0.200"/>
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="0" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        
        <!-- Normal App Button Style -->
        <Style x:Key="AppButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AppButtonStyleBase}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkGrayBlue}" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_Gray}" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkGray}" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="Gray" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Close App Button Style -->
        <Style x:Key="AppCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AppButtonStyleBase}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkGrayBlue}" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="IndianRed" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkGray}" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="Gray" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Main Button Style -->
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NoChromeButton}">
            <Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Dark}"/>
            <Setter Property="Background" Value="{StaticResource AKI_Background_Yellow}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Button.Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" ShadowDepth="3" BlurRadius="6" Opacity=".7"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="hover_enter"/>
                        <StopStoryboard BeginStoryboardName="hover_exit"/>
                        <BeginStoryboard x:Name="pressed_enter">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkGray}" Duration="0:0:0.200"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource AKI_White}" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).ShadowDepth" To="0" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).BlurRadius" To="0" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard x:Name="pressed_exit">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkYellow}" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).ShadowDepth" To="5" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).BlurRadius" To="8" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <RemoveStoryboard BeginStoryboardName="disabled_exit"/>
                        <BeginStoryboard x:Name="hover_enter">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                                                To="{StaticResource AKI_DarkGray}" From="{StaticResource AKI_DarkGray}"
                                                Duration="0:0:0.0"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                                To="{StaticResource AKI_DarkYellow}" From="{StaticResource AKI_Yellow}" 
                                                Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).ShadowDepth" To="5" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).BlurRadius" To="8" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard x:Name="hover_exit">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_Yellow}" Duration="0:0:0.200"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkGray}" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).ShadowDepth" To="3" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).BlurRadius" To="6" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="pressed_exit"/>
                        <StopStoryboard BeginStoryboardName="pressed_enter"/>
                        <StopStoryboard BeginStoryboardName="hover_enter"/>
                        <StopStoryboard BeginStoryboardName="hover_exit"/>
                        <BeginStoryboard x:Name="disabled_enter">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.100"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="LightGray"
                                                            Duration="0:0:0.200"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                                To="{StaticResource AKI_Transparaent_DarkGray}" From="{StaticResource AKI_DarkGray}"
                                                Duration="0:0:0.200"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="LightGray" Duration="0:0:0.200"/>
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="1" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).ShadowDepth" To="0" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).BlurRadius" To="0" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard x:Name="disabled_exit">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.100"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource AKI_DarkGray}"
                                                            Duration="0:0:0.200"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource AKI_Yellow}"
                                                            Duration="0:0:0.200"/>
                                <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.200"
                                                />
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="2" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).ShadowDepth" To="3" Duration="0:0:0.200"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Effect).BlurRadius" To="6" Duration="0:0:0.200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Alternate Button Style -->
        <Style x:Key="AltButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NoChromeButton}">
            <Setter Property="Foreground" Value="{StaticResource AKI_Background_Blue}"/>
            <Setter Property="Background" Value="{StaticResource AKI_Background_Blue}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AKI_Background_Blue}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Background).Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".7" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource AKI_White}" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="PreviewMouseUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.200"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource AKI_Blue}" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="1" Duration="0:0:0.200"/>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Background).Opacity" To="1" Duration="0:0:0.100" BeginTime="0:0:0.220"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource AKI_White}" Duration="0:0:0.100" BeginTime="0:0:0.220"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource AKI_Blue}" Duration="0:0:0.200"/>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Background).Opacity" To="0" Duration="0:0:0.200"/>
                            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="0" Duration="0:0:0.100" BeginTime="0:0:0.220"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Combo Box Style -->
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent">
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" Background="{StaticResource AKI_Background_Dark}" BorderBrush="Gray" BorderThickness="1" />
                                            <Border Grid.Column="0" Margin="1"  Background="{StaticResource AKI_Background_Dark}"  BorderBrush="Gray" BorderThickness="0.5" />
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="{StaticResource AKI_Background_Light}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource AKI_Background_DarkGrayBlue}" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AKI_Background_Light}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource AKI_Background_Dark}" BorderBrush="Gray" BorderThickness="1"/>
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
            <Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
        </Style>

        <!-- PasswordBox Style -->
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
            <Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
        </Style>

        <!-- Label Style-->
        <Style TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
            <Setter Property="Opacity" Value="0"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.200" BeginTime="0:0:0.150"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Icon Button Style -->
        <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NoChromeButton}">
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="35"/>
            <Setter Property="MinHeight" Value="25"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="Gray" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="WhiteSmoke" Duration="0:0:0.200"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- CheckBox Style -->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Opacity" Value="1"/>
        </Style>
        
        <!-- Grid Card Style -->
        <Style x:Key="GridCardStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="0" Color="Black"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Effect).ShadowDepth" To="3" From="0" Duration="0:0:0.200" BeginTime="0:0:0.150"/>
                            <DoubleAnimation Storyboard.TargetProperty="(Effect).BlurRadius" To="8" From="0" Duration="0:0:0.200" BeginTime="0:0:0.150"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" From="0" Duration="0:0:0.200" BeginTime="0:0:0.100"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Notification Banner Style -->
        <Style TargetType="{x:Type cc:NotificationBanner}">
            <Setter Property="Background" Value="{StaticResource AKI_Background_Light}"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleY="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding NotificationQueue.ShowBanner, RelativeSource={RelativeSource Self}}"
                             Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="1"
                                                 Duration="0:0:0.200"
                                                 />
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 From="0"
                                                 To="1"
                                                 Duration="0:0:0.160"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                 To="0" Duration="0:0:0.200"
                                                 />
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 From="1"
                                                 To="0"
                                                 Duration="0:0:0.160"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
